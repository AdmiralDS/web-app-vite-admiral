// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders the App page 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: flex;
  pointer-events: auto;
  align-items: center;
  width: fit-content;
  text-decoration: none;
  position: relative;
  border-radius: 4px;
  color: #0062FF;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 24px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c1:hover {
  color: #0046E2;
}

.c1:hover *[fill^='#'] {
  fill: #0046E2;
}

.c1:focus {
  color: #0046E2;
  outline-color: #0046E2;
}

.c1:focus *[fill^='#'] {
  fill: #0046E2;
}

.c1:active {
  color: #0132B0;
}

.c1:active *[fill^='#'] {
  fill: #0132B0;
}

.c1:focus-visible {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1 *[fill^='#'] {
  fill: #0062FF;
}

.c0 {
  color: #23262D;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 24px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c2 {
  width: 10px;
  height: 12px;
}

<body>
    <div>
      <style
        type="text/css"
      >
        
    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('truetype');
        font-display: swap;
        font-weight: 550;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }
    
    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('opentype');
        font-display: swap;
        font-weight: 500;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }

    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('opentype');
        font-display: swap;
        font-weight: 400;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }

      </style>
      <div>
        <a
          href="https://vitejs.dev"
          target="_blank"
        >
          <img
            alt="Vite logo"
            class="logo"
            src="/vite.svg"
          />
        </a>
        <a
          href="https://react.dev"
          target="_blank"
        >
          <img
            alt="React logo"
            class="logo react"
            src="SvgrURL"
          />
        </a>
      </div>
      <h1>
        Vite + React
      </h1>
      <div
        class="card"
      >
        <button
          class="button"
        >
          count is 
          0
        </button>
        <p
          class="c0"
        >
          Edit 
          <code>
            src/App.tsx
          </code>
           and save to test HMR
        </p>
      </div>
      <p
        class="read-the-docs"
      >
        Click on the Vite and React logos to learn more
      </p>
      <a
        class="c1"
        href="https://admiralds.github.io/react-ui"
        rel="noopener noreferrer"
        target="_blank"
      >
        Admiral Storybook
        <div
          class="c2"
        />
        <svgrurl
          width="20"
        />
      </a>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: flex;
  pointer-events: auto;
  align-items: center;
  width: fit-content;
  text-decoration: none;
  position: relative;
  border-radius: 4px;
  color: #0062FF;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 24px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c1:hover {
  color: #0046E2;
}

.c1:hover *[fill^='#'] {
  fill: #0046E2;
}

.c1:focus {
  color: #0046E2;
  outline-color: #0046E2;
}

.c1:focus *[fill^='#'] {
  fill: #0046E2;
}

.c1:active {
  color: #0132B0;
}

.c1:active *[fill^='#'] {
  fill: #0132B0;
}

.c1:focus-visible {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1 *[fill^='#'] {
  fill: #0062FF;
}

.c0 {
  color: #23262D;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 24px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c2 {
  width: 10px;
  height: 12px;
}

<div>
    <style
      type="text/css"
    >
      
    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('truetype');
        font-display: swap;
        font-weight: 550;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }
    
    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('opentype');
        font-display: swap;
        font-weight: 500;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }

    @font-face {
        font-family: 'VTB Group UI';
        src: url('test-file-stub') format('opentype');
        font-display: swap;
        font-weight: 400;
        font-style: normal;
        font-feature-settings: 'tnum' on, 'lnum' on, 'cv03' on, 'cv04' on;
    }

    </style>
    <div>
      <a
        href="https://vitejs.dev"
        target="_blank"
      >
        <img
          alt="Vite logo"
          class="logo"
          src="/vite.svg"
        />
      </a>
      <a
        href="https://react.dev"
        target="_blank"
      >
        <img
          alt="React logo"
          class="logo react"
          src="SvgrURL"
        />
      </a>
    </div>
    <h1>
      Vite + React
    </h1>
    <div
      class="card"
    >
      <button
        class="button"
      >
        count is 
        0
      </button>
      <p
        class="c0"
      >
        Edit 
        <code>
          src/App.tsx
        </code>
         and save to test HMR
      </p>
    </div>
    <p
      class="read-the-docs"
    >
      Click on the Vite and React logos to learn more
    </p>
    <a
      class="c1"
      href="https://admiralds.github.io/react-ui"
      rel="noopener noreferrer"
      target="_blank"
    >
      Admiral Storybook
      <div
        class="c2"
      />
      <svgrurl
        width="20"
      />
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
