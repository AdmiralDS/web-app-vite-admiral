/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ComponentsImport } from './routes/components'
import { Route as IndexImport } from './routes/index'
import { Route as GeneralResourcesImport } from './routes/general/resources'
import { Route as ComponentsTableIndexImport } from './routes/components/table/index'
import { Route as ComponentsCarouselSliderIndexImport } from './routes/components/carouselSlider/index'
import { Route as ComponentsCarouselIndexImport } from './routes/components/carousel/index'
import { Route as ComponentsButtonIndexImport } from './routes/components/button/index'
import { Route as ComponentsBadgeIndexImport } from './routes/components/badge/index'
import { Route as ComponentsActionBarIndexImport } from './routes/components/actionBar/index'
import { Route as ComponentsAccordionIndexImport } from './routes/components/accordion/index'
import { Route as ComponentsTableLoadOnScrollSpinnerImport } from './routes/components/table/loadOnScrollSpinner'
import { Route as ComponentsTableLoadOnScrollSkeletonImport } from './routes/components/table/loadOnScrollSkeleton'
import { Route as ComponentsTableLoadOnScrollImport } from './routes/components/table/loadOnScroll'
import { Route as ComponentsCarouselSliderCarouselSliderAutoChangeImport } from './routes/components/carouselSlider/carouselSliderAutoChange'
import { Route as ComponentsCarouselCarouselAutoChangeImport } from './routes/components/carousel/carouselAutoChange'
import { Route as ComponentsButtonButtonWithLoaderImport } from './routes/components/button/buttonWithLoader'
import { Route as ComponentsButtonButtonWithIconImport } from './routes/components/button/buttonWithIcon'
import { Route as ComponentsButtonButtonWithBadgeImport } from './routes/components/button/buttonWithBadge'
import { Route as ComponentsButtonButtonStylesImport } from './routes/components/button/buttonStyles'
import { Route as ComponentsBadgeBadgeVariantsImport } from './routes/components/badge/badgeVariants'
import { Route as ComponentsBadgeBadgeAccessibilityImport } from './routes/components/badge/badgeAccessibility'
import { Route as ComponentsAccordionAccordionModesImport } from './routes/components/accordion/accordionModes'
import { Route as ComponentsAccordionAccordionIconImport } from './routes/components/accordion/accordionIcon'
import { Route as ComponentsAccordionAccordionDividerImport } from './routes/components/accordion/accordionDivider'
import { Route as ComponentsAccordionAccordionDimensionImport } from './routes/components/accordion/accordionDimension'

// Create/Update Routes

const ComponentsRoute = ComponentsImport.update({
  id: '/components',
  path: '/components',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GeneralResourcesRoute = GeneralResourcesImport.update({
  id: '/general/resources',
  path: '/general/resources',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsTableIndexRoute = ComponentsTableIndexImport.update({
  id: '/table/',
  path: '/table/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsCarouselSliderIndexRoute =
  ComponentsCarouselSliderIndexImport.update({
    id: '/carouselSlider/',
    path: '/carouselSlider/',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsCarouselIndexRoute = ComponentsCarouselIndexImport.update({
  id: '/carousel/',
  path: '/carousel/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsButtonIndexRoute = ComponentsButtonIndexImport.update({
  id: '/button/',
  path: '/button/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsBadgeIndexRoute = ComponentsBadgeIndexImport.update({
  id: '/badge/',
  path: '/badge/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsActionBarIndexRoute = ComponentsActionBarIndexImport.update({
  id: '/actionBar/',
  path: '/actionBar/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsAccordionIndexRoute = ComponentsAccordionIndexImport.update({
  id: '/accordion/',
  path: '/accordion/',
  getParentRoute: () => ComponentsRoute,
} as any)

const ComponentsTableLoadOnScrollSpinnerRoute =
  ComponentsTableLoadOnScrollSpinnerImport.update({
    id: '/table/loadOnScrollSpinner',
    path: '/table/loadOnScrollSpinner',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsTableLoadOnScrollSkeletonRoute =
  ComponentsTableLoadOnScrollSkeletonImport.update({
    id: '/table/loadOnScrollSkeleton',
    path: '/table/loadOnScrollSkeleton',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsTableLoadOnScrollRoute =
  ComponentsTableLoadOnScrollImport.update({
    id: '/table/loadOnScroll',
    path: '/table/loadOnScroll',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsCarouselSliderCarouselSliderAutoChangeRoute =
  ComponentsCarouselSliderCarouselSliderAutoChangeImport.update({
    id: '/carouselSlider/carouselSliderAutoChange',
    path: '/carouselSlider/carouselSliderAutoChange',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsCarouselCarouselAutoChangeRoute =
  ComponentsCarouselCarouselAutoChangeImport.update({
    id: '/carousel/carouselAutoChange',
    path: '/carousel/carouselAutoChange',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsButtonButtonWithLoaderRoute =
  ComponentsButtonButtonWithLoaderImport.update({
    id: '/button/buttonWithLoader',
    path: '/button/buttonWithLoader',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsButtonButtonWithIconRoute =
  ComponentsButtonButtonWithIconImport.update({
    id: '/button/buttonWithIcon',
    path: '/button/buttonWithIcon',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsButtonButtonWithBadgeRoute =
  ComponentsButtonButtonWithBadgeImport.update({
    id: '/button/buttonWithBadge',
    path: '/button/buttonWithBadge',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsButtonButtonStylesRoute =
  ComponentsButtonButtonStylesImport.update({
    id: '/button/buttonStyles',
    path: '/button/buttonStyles',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsBadgeBadgeVariantsRoute =
  ComponentsBadgeBadgeVariantsImport.update({
    id: '/badge/badgeVariants',
    path: '/badge/badgeVariants',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsBadgeBadgeAccessibilityRoute =
  ComponentsBadgeBadgeAccessibilityImport.update({
    id: '/badge/badgeAccessibility',
    path: '/badge/badgeAccessibility',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsAccordionAccordionModesRoute =
  ComponentsAccordionAccordionModesImport.update({
    id: '/accordion/accordionModes',
    path: '/accordion/accordionModes',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsAccordionAccordionIconRoute =
  ComponentsAccordionAccordionIconImport.update({
    id: '/accordion/accordionIcon',
    path: '/accordion/accordionIcon',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsAccordionAccordionDividerRoute =
  ComponentsAccordionAccordionDividerImport.update({
    id: '/accordion/accordionDivider',
    path: '/accordion/accordionDivider',
    getParentRoute: () => ComponentsRoute,
  } as any)

const ComponentsAccordionAccordionDimensionRoute =
  ComponentsAccordionAccordionDimensionImport.update({
    id: '/accordion/accordionDimension',
    path: '/accordion/accordionDimension',
    getParentRoute: () => ComponentsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/components': {
      id: '/components'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsImport
      parentRoute: typeof rootRoute
    }
    '/general/resources': {
      id: '/general/resources'
      path: '/general/resources'
      fullPath: '/general/resources'
      preLoaderRoute: typeof GeneralResourcesImport
      parentRoute: typeof rootRoute
    }
    '/components/accordion/accordionDimension': {
      id: '/components/accordion/accordionDimension'
      path: '/accordion/accordionDimension'
      fullPath: '/components/accordion/accordionDimension'
      preLoaderRoute: typeof ComponentsAccordionAccordionDimensionImport
      parentRoute: typeof ComponentsImport
    }
    '/components/accordion/accordionDivider': {
      id: '/components/accordion/accordionDivider'
      path: '/accordion/accordionDivider'
      fullPath: '/components/accordion/accordionDivider'
      preLoaderRoute: typeof ComponentsAccordionAccordionDividerImport
      parentRoute: typeof ComponentsImport
    }
    '/components/accordion/accordionIcon': {
      id: '/components/accordion/accordionIcon'
      path: '/accordion/accordionIcon'
      fullPath: '/components/accordion/accordionIcon'
      preLoaderRoute: typeof ComponentsAccordionAccordionIconImport
      parentRoute: typeof ComponentsImport
    }
    '/components/accordion/accordionModes': {
      id: '/components/accordion/accordionModes'
      path: '/accordion/accordionModes'
      fullPath: '/components/accordion/accordionModes'
      preLoaderRoute: typeof ComponentsAccordionAccordionModesImport
      parentRoute: typeof ComponentsImport
    }
    '/components/badge/badgeAccessibility': {
      id: '/components/badge/badgeAccessibility'
      path: '/badge/badgeAccessibility'
      fullPath: '/components/badge/badgeAccessibility'
      preLoaderRoute: typeof ComponentsBadgeBadgeAccessibilityImport
      parentRoute: typeof ComponentsImport
    }
    '/components/badge/badgeVariants': {
      id: '/components/badge/badgeVariants'
      path: '/badge/badgeVariants'
      fullPath: '/components/badge/badgeVariants'
      preLoaderRoute: typeof ComponentsBadgeBadgeVariantsImport
      parentRoute: typeof ComponentsImport
    }
    '/components/button/buttonStyles': {
      id: '/components/button/buttonStyles'
      path: '/button/buttonStyles'
      fullPath: '/components/button/buttonStyles'
      preLoaderRoute: typeof ComponentsButtonButtonStylesImport
      parentRoute: typeof ComponentsImport
    }
    '/components/button/buttonWithBadge': {
      id: '/components/button/buttonWithBadge'
      path: '/button/buttonWithBadge'
      fullPath: '/components/button/buttonWithBadge'
      preLoaderRoute: typeof ComponentsButtonButtonWithBadgeImport
      parentRoute: typeof ComponentsImport
    }
    '/components/button/buttonWithIcon': {
      id: '/components/button/buttonWithIcon'
      path: '/button/buttonWithIcon'
      fullPath: '/components/button/buttonWithIcon'
      preLoaderRoute: typeof ComponentsButtonButtonWithIconImport
      parentRoute: typeof ComponentsImport
    }
    '/components/button/buttonWithLoader': {
      id: '/components/button/buttonWithLoader'
      path: '/button/buttonWithLoader'
      fullPath: '/components/button/buttonWithLoader'
      preLoaderRoute: typeof ComponentsButtonButtonWithLoaderImport
      parentRoute: typeof ComponentsImport
    }
    '/components/carousel/carouselAutoChange': {
      id: '/components/carousel/carouselAutoChange'
      path: '/carousel/carouselAutoChange'
      fullPath: '/components/carousel/carouselAutoChange'
      preLoaderRoute: typeof ComponentsCarouselCarouselAutoChangeImport
      parentRoute: typeof ComponentsImport
    }
    '/components/carouselSlider/carouselSliderAutoChange': {
      id: '/components/carouselSlider/carouselSliderAutoChange'
      path: '/carouselSlider/carouselSliderAutoChange'
      fullPath: '/components/carouselSlider/carouselSliderAutoChange'
      preLoaderRoute: typeof ComponentsCarouselSliderCarouselSliderAutoChangeImport
      parentRoute: typeof ComponentsImport
    }
    '/components/table/loadOnScroll': {
      id: '/components/table/loadOnScroll'
      path: '/table/loadOnScroll'
      fullPath: '/components/table/loadOnScroll'
      preLoaderRoute: typeof ComponentsTableLoadOnScrollImport
      parentRoute: typeof ComponentsImport
    }
    '/components/table/loadOnScrollSkeleton': {
      id: '/components/table/loadOnScrollSkeleton'
      path: '/table/loadOnScrollSkeleton'
      fullPath: '/components/table/loadOnScrollSkeleton'
      preLoaderRoute: typeof ComponentsTableLoadOnScrollSkeletonImport
      parentRoute: typeof ComponentsImport
    }
    '/components/table/loadOnScrollSpinner': {
      id: '/components/table/loadOnScrollSpinner'
      path: '/table/loadOnScrollSpinner'
      fullPath: '/components/table/loadOnScrollSpinner'
      preLoaderRoute: typeof ComponentsTableLoadOnScrollSpinnerImport
      parentRoute: typeof ComponentsImport
    }
    '/components/accordion/': {
      id: '/components/accordion/'
      path: '/accordion'
      fullPath: '/components/accordion'
      preLoaderRoute: typeof ComponentsAccordionIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/actionBar/': {
      id: '/components/actionBar/'
      path: '/actionBar'
      fullPath: '/components/actionBar'
      preLoaderRoute: typeof ComponentsActionBarIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/badge/': {
      id: '/components/badge/'
      path: '/badge'
      fullPath: '/components/badge'
      preLoaderRoute: typeof ComponentsBadgeIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/button/': {
      id: '/components/button/'
      path: '/button'
      fullPath: '/components/button'
      preLoaderRoute: typeof ComponentsButtonIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/carousel/': {
      id: '/components/carousel/'
      path: '/carousel'
      fullPath: '/components/carousel'
      preLoaderRoute: typeof ComponentsCarouselIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/carouselSlider/': {
      id: '/components/carouselSlider/'
      path: '/carouselSlider'
      fullPath: '/components/carouselSlider'
      preLoaderRoute: typeof ComponentsCarouselSliderIndexImport
      parentRoute: typeof ComponentsImport
    }
    '/components/table/': {
      id: '/components/table/'
      path: '/table'
      fullPath: '/components/table'
      preLoaderRoute: typeof ComponentsTableIndexImport
      parentRoute: typeof ComponentsImport
    }
  }
}

// Create and export the route tree

interface ComponentsRouteChildren {
  ComponentsAccordionAccordionDimensionRoute: typeof ComponentsAccordionAccordionDimensionRoute
  ComponentsAccordionAccordionDividerRoute: typeof ComponentsAccordionAccordionDividerRoute
  ComponentsAccordionAccordionIconRoute: typeof ComponentsAccordionAccordionIconRoute
  ComponentsAccordionAccordionModesRoute: typeof ComponentsAccordionAccordionModesRoute
  ComponentsBadgeBadgeAccessibilityRoute: typeof ComponentsBadgeBadgeAccessibilityRoute
  ComponentsBadgeBadgeVariantsRoute: typeof ComponentsBadgeBadgeVariantsRoute
  ComponentsButtonButtonStylesRoute: typeof ComponentsButtonButtonStylesRoute
  ComponentsButtonButtonWithBadgeRoute: typeof ComponentsButtonButtonWithBadgeRoute
  ComponentsButtonButtonWithIconRoute: typeof ComponentsButtonButtonWithIconRoute
  ComponentsButtonButtonWithLoaderRoute: typeof ComponentsButtonButtonWithLoaderRoute
  ComponentsCarouselCarouselAutoChangeRoute: typeof ComponentsCarouselCarouselAutoChangeRoute
  ComponentsCarouselSliderCarouselSliderAutoChangeRoute: typeof ComponentsCarouselSliderCarouselSliderAutoChangeRoute
  ComponentsTableLoadOnScrollRoute: typeof ComponentsTableLoadOnScrollRoute
  ComponentsTableLoadOnScrollSkeletonRoute: typeof ComponentsTableLoadOnScrollSkeletonRoute
  ComponentsTableLoadOnScrollSpinnerRoute: typeof ComponentsTableLoadOnScrollSpinnerRoute
  ComponentsAccordionIndexRoute: typeof ComponentsAccordionIndexRoute
  ComponentsActionBarIndexRoute: typeof ComponentsActionBarIndexRoute
  ComponentsBadgeIndexRoute: typeof ComponentsBadgeIndexRoute
  ComponentsButtonIndexRoute: typeof ComponentsButtonIndexRoute
  ComponentsCarouselIndexRoute: typeof ComponentsCarouselIndexRoute
  ComponentsCarouselSliderIndexRoute: typeof ComponentsCarouselSliderIndexRoute
  ComponentsTableIndexRoute: typeof ComponentsTableIndexRoute
}

const ComponentsRouteChildren: ComponentsRouteChildren = {
  ComponentsAccordionAccordionDimensionRoute:
    ComponentsAccordionAccordionDimensionRoute,
  ComponentsAccordionAccordionDividerRoute:
    ComponentsAccordionAccordionDividerRoute,
  ComponentsAccordionAccordionIconRoute: ComponentsAccordionAccordionIconRoute,
  ComponentsAccordionAccordionModesRoute:
    ComponentsAccordionAccordionModesRoute,
  ComponentsBadgeBadgeAccessibilityRoute:
    ComponentsBadgeBadgeAccessibilityRoute,
  ComponentsBadgeBadgeVariantsRoute: ComponentsBadgeBadgeVariantsRoute,
  ComponentsButtonButtonStylesRoute: ComponentsButtonButtonStylesRoute,
  ComponentsButtonButtonWithBadgeRoute: ComponentsButtonButtonWithBadgeRoute,
  ComponentsButtonButtonWithIconRoute: ComponentsButtonButtonWithIconRoute,
  ComponentsButtonButtonWithLoaderRoute: ComponentsButtonButtonWithLoaderRoute,
  ComponentsCarouselCarouselAutoChangeRoute:
    ComponentsCarouselCarouselAutoChangeRoute,
  ComponentsCarouselSliderCarouselSliderAutoChangeRoute:
    ComponentsCarouselSliderCarouselSliderAutoChangeRoute,
  ComponentsTableLoadOnScrollRoute: ComponentsTableLoadOnScrollRoute,
  ComponentsTableLoadOnScrollSkeletonRoute:
    ComponentsTableLoadOnScrollSkeletonRoute,
  ComponentsTableLoadOnScrollSpinnerRoute:
    ComponentsTableLoadOnScrollSpinnerRoute,
  ComponentsAccordionIndexRoute: ComponentsAccordionIndexRoute,
  ComponentsActionBarIndexRoute: ComponentsActionBarIndexRoute,
  ComponentsBadgeIndexRoute: ComponentsBadgeIndexRoute,
  ComponentsButtonIndexRoute: ComponentsButtonIndexRoute,
  ComponentsCarouselIndexRoute: ComponentsCarouselIndexRoute,
  ComponentsCarouselSliderIndexRoute: ComponentsCarouselSliderIndexRoute,
  ComponentsTableIndexRoute: ComponentsTableIndexRoute,
}

const ComponentsRouteWithChildren = ComponentsRoute._addFileChildren(
  ComponentsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteWithChildren
  '/general/resources': typeof GeneralResourcesRoute
  '/components/accordion/accordionDimension': typeof ComponentsAccordionAccordionDimensionRoute
  '/components/accordion/accordionDivider': typeof ComponentsAccordionAccordionDividerRoute
  '/components/accordion/accordionIcon': typeof ComponentsAccordionAccordionIconRoute
  '/components/accordion/accordionModes': typeof ComponentsAccordionAccordionModesRoute
  '/components/badge/badgeAccessibility': typeof ComponentsBadgeBadgeAccessibilityRoute
  '/components/badge/badgeVariants': typeof ComponentsBadgeBadgeVariantsRoute
  '/components/button/buttonStyles': typeof ComponentsButtonButtonStylesRoute
  '/components/button/buttonWithBadge': typeof ComponentsButtonButtonWithBadgeRoute
  '/components/button/buttonWithIcon': typeof ComponentsButtonButtonWithIconRoute
  '/components/button/buttonWithLoader': typeof ComponentsButtonButtonWithLoaderRoute
  '/components/carousel/carouselAutoChange': typeof ComponentsCarouselCarouselAutoChangeRoute
  '/components/carouselSlider/carouselSliderAutoChange': typeof ComponentsCarouselSliderCarouselSliderAutoChangeRoute
  '/components/table/loadOnScroll': typeof ComponentsTableLoadOnScrollRoute
  '/components/table/loadOnScrollSkeleton': typeof ComponentsTableLoadOnScrollSkeletonRoute
  '/components/table/loadOnScrollSpinner': typeof ComponentsTableLoadOnScrollSpinnerRoute
  '/components/accordion': typeof ComponentsAccordionIndexRoute
  '/components/actionBar': typeof ComponentsActionBarIndexRoute
  '/components/badge': typeof ComponentsBadgeIndexRoute
  '/components/button': typeof ComponentsButtonIndexRoute
  '/components/carousel': typeof ComponentsCarouselIndexRoute
  '/components/carouselSlider': typeof ComponentsCarouselSliderIndexRoute
  '/components/table': typeof ComponentsTableIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteWithChildren
  '/general/resources': typeof GeneralResourcesRoute
  '/components/accordion/accordionDimension': typeof ComponentsAccordionAccordionDimensionRoute
  '/components/accordion/accordionDivider': typeof ComponentsAccordionAccordionDividerRoute
  '/components/accordion/accordionIcon': typeof ComponentsAccordionAccordionIconRoute
  '/components/accordion/accordionModes': typeof ComponentsAccordionAccordionModesRoute
  '/components/badge/badgeAccessibility': typeof ComponentsBadgeBadgeAccessibilityRoute
  '/components/badge/badgeVariants': typeof ComponentsBadgeBadgeVariantsRoute
  '/components/button/buttonStyles': typeof ComponentsButtonButtonStylesRoute
  '/components/button/buttonWithBadge': typeof ComponentsButtonButtonWithBadgeRoute
  '/components/button/buttonWithIcon': typeof ComponentsButtonButtonWithIconRoute
  '/components/button/buttonWithLoader': typeof ComponentsButtonButtonWithLoaderRoute
  '/components/carousel/carouselAutoChange': typeof ComponentsCarouselCarouselAutoChangeRoute
  '/components/carouselSlider/carouselSliderAutoChange': typeof ComponentsCarouselSliderCarouselSliderAutoChangeRoute
  '/components/table/loadOnScroll': typeof ComponentsTableLoadOnScrollRoute
  '/components/table/loadOnScrollSkeleton': typeof ComponentsTableLoadOnScrollSkeletonRoute
  '/components/table/loadOnScrollSpinner': typeof ComponentsTableLoadOnScrollSpinnerRoute
  '/components/accordion': typeof ComponentsAccordionIndexRoute
  '/components/actionBar': typeof ComponentsActionBarIndexRoute
  '/components/badge': typeof ComponentsBadgeIndexRoute
  '/components/button': typeof ComponentsButtonIndexRoute
  '/components/carousel': typeof ComponentsCarouselIndexRoute
  '/components/carouselSlider': typeof ComponentsCarouselSliderIndexRoute
  '/components/table': typeof ComponentsTableIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteWithChildren
  '/general/resources': typeof GeneralResourcesRoute
  '/components/accordion/accordionDimension': typeof ComponentsAccordionAccordionDimensionRoute
  '/components/accordion/accordionDivider': typeof ComponentsAccordionAccordionDividerRoute
  '/components/accordion/accordionIcon': typeof ComponentsAccordionAccordionIconRoute
  '/components/accordion/accordionModes': typeof ComponentsAccordionAccordionModesRoute
  '/components/badge/badgeAccessibility': typeof ComponentsBadgeBadgeAccessibilityRoute
  '/components/badge/badgeVariants': typeof ComponentsBadgeBadgeVariantsRoute
  '/components/button/buttonStyles': typeof ComponentsButtonButtonStylesRoute
  '/components/button/buttonWithBadge': typeof ComponentsButtonButtonWithBadgeRoute
  '/components/button/buttonWithIcon': typeof ComponentsButtonButtonWithIconRoute
  '/components/button/buttonWithLoader': typeof ComponentsButtonButtonWithLoaderRoute
  '/components/carousel/carouselAutoChange': typeof ComponentsCarouselCarouselAutoChangeRoute
  '/components/carouselSlider/carouselSliderAutoChange': typeof ComponentsCarouselSliderCarouselSliderAutoChangeRoute
  '/components/table/loadOnScroll': typeof ComponentsTableLoadOnScrollRoute
  '/components/table/loadOnScrollSkeleton': typeof ComponentsTableLoadOnScrollSkeletonRoute
  '/components/table/loadOnScrollSpinner': typeof ComponentsTableLoadOnScrollSpinnerRoute
  '/components/accordion/': typeof ComponentsAccordionIndexRoute
  '/components/actionBar/': typeof ComponentsActionBarIndexRoute
  '/components/badge/': typeof ComponentsBadgeIndexRoute
  '/components/button/': typeof ComponentsButtonIndexRoute
  '/components/carousel/': typeof ComponentsCarouselIndexRoute
  '/components/carouselSlider/': typeof ComponentsCarouselSliderIndexRoute
  '/components/table/': typeof ComponentsTableIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/components'
    | '/general/resources'
    | '/components/accordion/accordionDimension'
    | '/components/accordion/accordionDivider'
    | '/components/accordion/accordionIcon'
    | '/components/accordion/accordionModes'
    | '/components/badge/badgeAccessibility'
    | '/components/badge/badgeVariants'
    | '/components/button/buttonStyles'
    | '/components/button/buttonWithBadge'
    | '/components/button/buttonWithIcon'
    | '/components/button/buttonWithLoader'
    | '/components/carousel/carouselAutoChange'
    | '/components/carouselSlider/carouselSliderAutoChange'
    | '/components/table/loadOnScroll'
    | '/components/table/loadOnScrollSkeleton'
    | '/components/table/loadOnScrollSpinner'
    | '/components/accordion'
    | '/components/actionBar'
    | '/components/badge'
    | '/components/button'
    | '/components/carousel'
    | '/components/carouselSlider'
    | '/components/table'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/components'
    | '/general/resources'
    | '/components/accordion/accordionDimension'
    | '/components/accordion/accordionDivider'
    | '/components/accordion/accordionIcon'
    | '/components/accordion/accordionModes'
    | '/components/badge/badgeAccessibility'
    | '/components/badge/badgeVariants'
    | '/components/button/buttonStyles'
    | '/components/button/buttonWithBadge'
    | '/components/button/buttonWithIcon'
    | '/components/button/buttonWithLoader'
    | '/components/carousel/carouselAutoChange'
    | '/components/carouselSlider/carouselSliderAutoChange'
    | '/components/table/loadOnScroll'
    | '/components/table/loadOnScrollSkeleton'
    | '/components/table/loadOnScrollSpinner'
    | '/components/accordion'
    | '/components/actionBar'
    | '/components/badge'
    | '/components/button'
    | '/components/carousel'
    | '/components/carouselSlider'
    | '/components/table'
  id:
    | '__root__'
    | '/'
    | '/components'
    | '/general/resources'
    | '/components/accordion/accordionDimension'
    | '/components/accordion/accordionDivider'
    | '/components/accordion/accordionIcon'
    | '/components/accordion/accordionModes'
    | '/components/badge/badgeAccessibility'
    | '/components/badge/badgeVariants'
    | '/components/button/buttonStyles'
    | '/components/button/buttonWithBadge'
    | '/components/button/buttonWithIcon'
    | '/components/button/buttonWithLoader'
    | '/components/carousel/carouselAutoChange'
    | '/components/carouselSlider/carouselSliderAutoChange'
    | '/components/table/loadOnScroll'
    | '/components/table/loadOnScrollSkeleton'
    | '/components/table/loadOnScrollSpinner'
    | '/components/accordion/'
    | '/components/actionBar/'
    | '/components/badge/'
    | '/components/button/'
    | '/components/carousel/'
    | '/components/carouselSlider/'
    | '/components/table/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComponentsRoute: typeof ComponentsRouteWithChildren
  GeneralResourcesRoute: typeof GeneralResourcesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComponentsRoute: ComponentsRouteWithChildren,
  GeneralResourcesRoute: GeneralResourcesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/components",
        "/general/resources"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/components": {
      "filePath": "components.tsx",
      "children": [
        "/components/accordion/accordionDimension",
        "/components/accordion/accordionDivider",
        "/components/accordion/accordionIcon",
        "/components/accordion/accordionModes",
        "/components/badge/badgeAccessibility",
        "/components/badge/badgeVariants",
        "/components/button/buttonStyles",
        "/components/button/buttonWithBadge",
        "/components/button/buttonWithIcon",
        "/components/button/buttonWithLoader",
        "/components/carousel/carouselAutoChange",
        "/components/carouselSlider/carouselSliderAutoChange",
        "/components/table/loadOnScroll",
        "/components/table/loadOnScrollSkeleton",
        "/components/table/loadOnScrollSpinner",
        "/components/accordion/",
        "/components/actionBar/",
        "/components/badge/",
        "/components/button/",
        "/components/carousel/",
        "/components/carouselSlider/",
        "/components/table/"
      ]
    },
    "/general/resources": {
      "filePath": "general/resources.tsx"
    },
    "/components/accordion/accordionDimension": {
      "filePath": "components/accordion/accordionDimension.tsx",
      "parent": "/components"
    },
    "/components/accordion/accordionDivider": {
      "filePath": "components/accordion/accordionDivider.tsx",
      "parent": "/components"
    },
    "/components/accordion/accordionIcon": {
      "filePath": "components/accordion/accordionIcon.tsx",
      "parent": "/components"
    },
    "/components/accordion/accordionModes": {
      "filePath": "components/accordion/accordionModes.tsx",
      "parent": "/components"
    },
    "/components/badge/badgeAccessibility": {
      "filePath": "components/badge/badgeAccessibility.tsx",
      "parent": "/components"
    },
    "/components/badge/badgeVariants": {
      "filePath": "components/badge/badgeVariants.tsx",
      "parent": "/components"
    },
    "/components/button/buttonStyles": {
      "filePath": "components/button/buttonStyles.tsx",
      "parent": "/components"
    },
    "/components/button/buttonWithBadge": {
      "filePath": "components/button/buttonWithBadge.tsx",
      "parent": "/components"
    },
    "/components/button/buttonWithIcon": {
      "filePath": "components/button/buttonWithIcon.tsx",
      "parent": "/components"
    },
    "/components/button/buttonWithLoader": {
      "filePath": "components/button/buttonWithLoader.tsx",
      "parent": "/components"
    },
    "/components/carousel/carouselAutoChange": {
      "filePath": "components/carousel/carouselAutoChange.tsx",
      "parent": "/components"
    },
    "/components/carouselSlider/carouselSliderAutoChange": {
      "filePath": "components/carouselSlider/carouselSliderAutoChange.tsx",
      "parent": "/components"
    },
    "/components/table/loadOnScroll": {
      "filePath": "components/table/loadOnScroll.tsx",
      "parent": "/components"
    },
    "/components/table/loadOnScrollSkeleton": {
      "filePath": "components/table/loadOnScrollSkeleton.tsx",
      "parent": "/components"
    },
    "/components/table/loadOnScrollSpinner": {
      "filePath": "components/table/loadOnScrollSpinner.tsx",
      "parent": "/components"
    },
    "/components/accordion/": {
      "filePath": "components/accordion/index.tsx",
      "parent": "/components"
    },
    "/components/actionBar/": {
      "filePath": "components/actionBar/index.tsx",
      "parent": "/components"
    },
    "/components/badge/": {
      "filePath": "components/badge/index.tsx",
      "parent": "/components"
    },
    "/components/button/": {
      "filePath": "components/button/index.tsx",
      "parent": "/components"
    },
    "/components/carousel/": {
      "filePath": "components/carousel/index.tsx",
      "parent": "/components"
    },
    "/components/carouselSlider/": {
      "filePath": "components/carouselSlider/index.tsx",
      "parent": "/components"
    },
    "/components/table/": {
      "filePath": "components/table/index.tsx",
      "parent": "/components"
    }
  }
}
ROUTE_MANIFEST_END */
